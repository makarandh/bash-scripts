#!/bin/bash

    # This program is free software: you can redistribute it and/or modify # it under the terms of the GNU General Public License as published by
    # the Free Software Foundation, either version 3 of the License, or
    # (at your option) any later version.

    # This program is distributed in the hope that it will be useful,
    # but WITHOUT ANY WARRANTY; without even the implied warranty of
    # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    # GNU General Public License for more details.

    # You should have received a copy of the GNU General Public License
    # along with this program.  If not, see <https://www.gnu.org/licenses/>.


################################################################
######################## APT UPDATE ############################
################################################################

apt --version > /dev/null 2>&1 
APT_EXISTS=${?}

if [[ ${APT_EXISTS} -eq 0 ]]
then
    echo -e "\n===================================================================="
    echo -e " Updating Apt Packages"
    echo -e "====================================================================\n"

    echo -e "\nRunning apt update..."
    echo -e "--------------------------------------------------------------------\n"
    sudo apt update -y 
    UPDATE_EXIT_CODE=${?}

    echo -e "\nRunning dpkg configure..."
    echo -e "--------------------------------------------------------------------\n"
    sudo dpkg --configure -a

    echo -e "\nRunning apt install -f..."
    echo -e "--------------------------------------------------------------------\n"
    sudo apt install -f -y

    echo -e "\nRunning apt autoremove..."
    echo -e "--------------------------------------------------------------------\n"
    sudo apt autoremove -y 

    echo -e "\nRunning apt full-upgrade..."
    echo -e "--------------------------------------------------------------------\n"
    sudo apt full-upgrade -y 
    UPGRADE_EXIT_CODE=${?}

    echo -e "\nRunning apt install -f..."
    echo -e "--------------------------------------------------------------------\n"
    sudo apt install -f -y

    echo -e "\nRunning apt autoremove..."
    echo -e "--------------------------------------------------------------------\n"
    sudo apt autoremove -y 

    echo -e "\nRunning apt clean..."
    echo -e "--------------------------------------------------------------------\n"
    sudo apt clean 

    echo -e "\nDone"
    echo -e "--------------------------------------------------------------------\n"
fi


################################################################
######################## DNF UPDATE ############################
################################################################

dnf --version > /dev/null 2>&1 
DNF_EXISTS=${?}

if [[ ${DNF_EXISTS} -eq 0 ]]
then
    echo -e "\n===================================================================="
    echo -e " Updating Dnf Packages"
    echo -e "====================================================================\n"

    echo -e "\nRunning dnf update..."
    echo -e "--------------------------------------------------------------------\n"
    sudo dnf update -y
    DNF_UPDATE_EXIT_CODE=${?}

    echo -e "\nRunning dnf autoremove..."
    echo -e "--------------------------------------------------------------------\n"
    sudo dnf autoremove -y 

    echo -e "\nRunning dnf clean..."
    echo -e "--------------------------------------------------------------------\n"
    sudo dnf clean dbcache packages

    echo -e "\nDone"
    echo -e "--------------------------------------------------------------------\n"
fi


################################################################
####################### NVIDIA UPDATE ##########################
################################################################

ubuntu-drivers -h > /dev/null 2>&1
UBUNTU_DRIVERS_EXISTS=${?}

if [[ ${UBUNTU_DRIVERS_EXISTS} -eq 0 ]] && [[ $(id -u) -eq 0  ]]
then
	echo -e "\n===================================================================="
	echo -e " Running ubuntu-drivers autoinstall..."
	echo -e "====================================================================\n"
	ubuntu-drivers autoinstall
	UBUNTU_DRIVERS_EXIT_CODE=${?}
	echo -e "\nDone"
	echo -e "--------------------------------------------------------------------\n"
fi

################################################################
####################### SNAP UPDATE ############################
################################################################

snap --version > /dev/null 2>&1
SNAP_EXISTS=${?}

if [[ ${SNAP_EXISTS} -eq 0 ]]
then
	echo -e "\n===================================================================="
	echo -e " Running snap refresh..."
	echo -e "====================================================================\n"
	sudo snap refresh 
	SNAP_EXIT_CODE=${?}
	echo -e "\nDone"
	echo -e "--------------------------------------------------------------------\n"
fi

################################################################
##################### FLATPAK UPDATE ###########################
################################################################

flatpak --version > /dev/null 2>&1
FLATPAK_EXISTS=${?}

if [[ ${FLATPAK_EXISTS} -eq 0 ]]
then
	echo -e "\n===================================================================="
	echo -e " Running flatpak update..."
	echo -e "====================================================================\n"
	sudo flatpak update
	FLATPAK_EXIT_CODE=${?}
	echo -e "\nDone"
	echo -e "--------------------------------------------------------------------\n"
fi

################################################################
######################### NPM UPDATE ###########################
################################################################

npm --version > /dev/null 2>&1
NPM_EXISTS=${?}

if [[ ${NPM_EXISTS} -eq 0 ]]
then
	echo -e "\n===================================================================="
	echo -e " Running npm update..."
	echo -e "====================================================================\n"
	ncu -g
	sudo npm update -g
	NPM_EXIT_CODE=${?}
	echo -e "\nDone"
	echo -e "--------------------------------------------------------------------\n"
fi

################################################################
######################### PYTHON UPDATE ########################
################################################################

PYTHON3="/usr/bin/python3" 
${PYTHON3} --version > /dev/null 2>&1
PYTHON_EXISTS=${?}

if [[ ${PYTHON_EXISTS} -eq 0 ]]
then
	echo -e "\n===================================================================="
	echo -e " Updating Python packages..."
	echo -e "====================================================================\n"
	sudo ${PYTHON3} -m pip install --upgrade pip setuptools wheel youtube-dl numpy matplotlib speedtest-cli virtualenv scipy pipenv 
	PIP_EXIT_CODE=${?}
	echo -e "\nDone"
	echo -e "--------------------------------------------------------------------\n"
fi


################################################################
######################## STATUS MESSAGE ########################
################################################################


echo -e "\n===================================================================="
echo -e " Operations completed with the following exit codes:(0 = SUCCESS)"
echo -e "====================================================================\n"
if [[ ${APT_EXISTS} -eq 0 ]]
then
    echo "APT UPDATE : ${UPDATE_EXIT_CODE}"
    echo "APT UPGRADE: ${UPGRADE_EXIT_CODE}"
fi

if [[ ${DNF_EXISTS} -eq 0 ]]
then
    echo "DNF : ${DNF_UPDATE_EXIT_CODE}"
fi

if [ ${UBUNTU_DRIVERS_EXISTS} -eq "0" ]
then
	echo "NVIDIA : ${UBUNTU_DRIVERS_EXIT_CODE}"
fi

if [ ${SNAP_EXISTS} -eq "0" ]
then
	echo "SNAP   : ${SNAP_EXIT_CODE}"
fi

if [ ${FLATPAK_EXISTS} -eq "0" ]
then
	echo "FLATPAK: ${FLATPAK_EXIT_CODE}"
fi

if [ ${NPM_EXISTS} -eq "0" ]
then
	echo "NPM    : ${NPM_EXIT_CODE}"
fi

if [ ${PYTHON_EXISTS} -eq "0" ]
then
	echo "PIP    : ${PIP_EXIT_CODE}"
fi
echo ""
echo -e "\nDone"
echo -e "--------------------------------------------------------------------\n"

